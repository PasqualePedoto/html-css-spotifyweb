/* RESET */

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
}

/* Eliminiamo la linea orizzontale sotto i 
link */

a{
    text-decoration: none;
}

/* Colore per paragraph e title
2 e 3*/

p{
    color: gray;
    font-size: 12px;
}

h3
,h2{
    color: white;
}

/* Adattiamo le immagini alla grandezza dei
blocchi che li contengono */

img{
    max-width: 100%;
}

/* Utils */

.container{
    max-width: 992px;
    margin: 0 auto;
}

.border{
    border: 1px solid red;
}

.border-blue{
    border: 1px solid blue
}

.text-center{
    text-align: center;
}

.btn{
    display: block;

    width: 200px;
    height: 40px;
    border: 1px solid white;
    border-radius: 25px;
    padding: 10px;

    font-size: 15px;

    /* Centriamo il testo nel button */

    text-align: center;
}

/* 
MARGIN
*/

.marg-b-5{
    margin-bottom: 5px;
}

.marg-b-20{
    margin-bottom: 20px;
}

.marg-b-10{
    margin-bottom: 10px;
}

/* 
PADDING
*/

.pad-t-20{
    padding-top: 20px;
}

/*
 FLEX UTILS
 */

.display-flex{
    display: flex;
}

.content-right{
    justify-content: flex-end;
}

.align-center{
    align-items: center;
}

/* In questo modo fissiamo la
dimensione della web application
uguale al 100% della viewport */

/* Non consentiamo lo scroll 
laterale */

body{
    overflow-y: hidden;
}

/* Per far si che la dimensione in height sia 
sempre uguale alla viewport definiamo la 
dimensione del blocco contenente main, header e
navbar */

body > div:first-child{
    height: calc(100vh - 100px);
    overflow-y: hidden;
}

/*
 SIDEBAR
 */

 #sidebar{
     flex-basis: 20%;
     height: 100%;
     background-color: lightblue;
 }

#main{
    flex-basis: 80%;

    /* Abbiamo calcolato in questo modo 
    l'altezza del main in modo tale da dare
    una dimensione precisa che entrasse 
    all'interno della viewport così da
    fissare correttamente la scroll-bar */

    height: calc(100vh - 100px);
    background-color: lightsalmon;

    /* Scroll-bar inserita */
    overflow-y: auto;
}

/*
HEADER 
 */

 #main header{
     position: sticky;
     top: 0;
     width: 100%;
    
    /* L'altezza dell'header è fondamentale 
    perchè è un requisito di calcolo che determina
    la misura precisa dei contenuti principali
    del main, in modo tale che scrollino. */

     height: 50px;
     padding: 10px;

     background-color: #444;

     box-shadow: 1px 3px 3px #999;
 }

 /* Definiamo il bottone presente nell'header */

 header a{
     border: 1px solid white;

     background-color: transparent;
     color: white;
 }

 /*
  AREA CONTENUTI PRINCIPALI
 */

 /* Setting delle section */

 section{
     padding: 30px 10px;
 }

 /* Costruiamo la struttura flex per contenere
 le cards */

 /* Dando padding alle colonne e margin negativo
 al contenitore flex definiamo a nostro piacimento
 lo spessore del gutter */

 .row{
     display: flex;

     margin: 0 -0.5rem;
 }

 .column{
     padding: 0.5rem 0.5rem;

     max-width: 150px;
     min-height: 150px;
 }

 /* Descrizione delle cards */

 .column .description{
     text-align: center;

     /* Abbiamo fissato una max-width
     poichè altrimenti, all'aumentare
     del testo aumenta la grandezza del
     blocco e di conseguenza anche la foto
      */
     max-width: 150px;
 }

 .column .description p{
     font-size: 12px;
}

.column .description h3{
    font-size: 15px;
}

/*
POPULAR ARTISTS SECTION
*/

/* In questo caso le img delle 
cards avranno un bordo non squadrato
ma rotondo
 */

 #popular-artists img{
    border-radius: 50%;
    object-fit: cover;
 }

/*
 FOOTER
 */

 footer{
     background-color: blue;
     height: 100px;

     z-index: 5;
 }
